//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ScrumDevelopmentApplication.AcceptanceTestServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AcceptanceTestServiceReference.IAcceptanceTestService")]
    public interface IAcceptanceTestService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/InsertAcceptanceTest", ReplyAction="http://tempuri.org/IAcceptanceTestService/InsertAcceptanceTestResponse")]
        bool InsertAcceptanceTest(string atName, string atDescription, int userStoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/InsertAcceptanceTest", ReplyAction="http://tempuri.org/IAcceptanceTestService/InsertAcceptanceTestResponse")]
        System.Threading.Tasks.Task<bool> InsertAcceptanceTestAsync(string atName, string atDescription, int userStoryId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/DeleteAcceptanceTest", ReplyAction="http://tempuri.org/IAcceptanceTestService/DeleteAcceptanceTestResponse")]
        bool DeleteAcceptanceTest(int testId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/DeleteAcceptanceTest", ReplyAction="http://tempuri.org/IAcceptanceTestService/DeleteAcceptanceTestResponse")]
        System.Threading.Tasks.Task<bool> DeleteAcceptanceTestAsync(int testId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/GetTestList", ReplyAction="http://tempuri.org/IAcceptanceTestService/GetTestListResponse")]
        string[] GetTestList(int storyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/GetTestList", ReplyAction="http://tempuri.org/IAcceptanceTestService/GetTestListResponse")]
        System.Threading.Tasks.Task<string[]> GetTestListAsync(int storyId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/GetAcceptanceTest", ReplyAction="http://tempuri.org/IAcceptanceTestService/GetAcceptanceTestResponse")]
        string[] GetAcceptanceTest(int acceptanceTestId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAcceptanceTestService/GetAcceptanceTest", ReplyAction="http://tempuri.org/IAcceptanceTestService/GetAcceptanceTestResponse")]
        System.Threading.Tasks.Task<string[]> GetAcceptanceTestAsync(int acceptanceTestId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAcceptanceTestServiceChannel : ScrumDevelopmentApplication.AcceptanceTestServiceReference.IAcceptanceTestService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AcceptanceTestServiceClient : System.ServiceModel.ClientBase<ScrumDevelopmentApplication.AcceptanceTestServiceReference.IAcceptanceTestService>, ScrumDevelopmentApplication.AcceptanceTestServiceReference.IAcceptanceTestService {
        
        public AcceptanceTestServiceClient() {
        }
        
        public AcceptanceTestServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AcceptanceTestServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AcceptanceTestServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AcceptanceTestServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool InsertAcceptanceTest(string atName, string atDescription, int userStoryId) {
            return base.Channel.InsertAcceptanceTest(atName, atDescription, userStoryId);
        }
        
        public System.Threading.Tasks.Task<bool> InsertAcceptanceTestAsync(string atName, string atDescription, int userStoryId) {
            return base.Channel.InsertAcceptanceTestAsync(atName, atDescription, userStoryId);
        }
        
        public bool DeleteAcceptanceTest(int testId) {
            return base.Channel.DeleteAcceptanceTest(testId);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteAcceptanceTestAsync(int testId) {
            return base.Channel.DeleteAcceptanceTestAsync(testId);
        }
        
        public string[] GetTestList(int storyId) {
            return base.Channel.GetTestList(storyId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetTestListAsync(int storyId) {
            return base.Channel.GetTestListAsync(storyId);
        }
        
        public string[] GetAcceptanceTest(int acceptanceTestId) {
            return base.Channel.GetAcceptanceTest(acceptanceTestId);
        }
        
        public System.Threading.Tasks.Task<string[]> GetAcceptanceTestAsync(int acceptanceTestId) {
            return base.Channel.GetAcceptanceTestAsync(acceptanceTestId);
        }
    }
}
